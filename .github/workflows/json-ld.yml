# .github/workflows/validate-and-deploy.yml
name: Validate JSON-LD & Deploy to Pages

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  # Zet op 'false' als je NIET wilt falen op waarschuwingen.
  FAIL_ON_WARNINGS: "true"

jobs:
  validate:
    name: Validate JSON-LD in HTML
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install validator
        run: npm i -g structured-data-testing-tool@^4

      - name: Run schema validation on HTML files
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(**/*.html)
          if [ ${#files[@]} -eq 0 ]; then
            echo "Geen HTML-bestanden gevonden; sla validatie over."
            exit 0
          fi

          failed=0
          warn_failed=0

          # Maak (of leeg) een samenvattingssectie
          echo "## Structured Data waarschuwingen" > warnings_summary.md
          echo "" >> warnings_summary.md

          for f in "${files[@]}"; do
            echo "::group::Validating $f"
            # Draai sdtt en capteer output
            if ! output="$(sdtt --file "$f" --info --presets Google 2>&1)"; then
              echo "$output"
              echo "✗ Fouten in: $f"
              failed=1
              echo "::endgroup::"
              continue
            fi

            # Volledige output tonen
            echo "$output"

            # Waarschuwingen isoleren en tonen onder eigen kopje
            warn_lines="$(echo "$output" | grep -E '⚠|[Ww]arning' || true)"
            if [ -n "$warn_lines" ]; then
              echo "---- Waarschuwingen ----"
              echo "$warn_lines"
              echo "------------------------"

              # Voeg ook toe aan de Job Summary
              {
                echo "### $f"
                echo ""
                echo '```'
                echo "$warn_lines"
                echo '```'
                echo ""
              } >> warnings_summary.md

              if [ "${FAIL_ON_WARNINGS}" = "true" ]; then
                warn_failed=1
              fi
            fi
            echo "::endgroup::"
          done

          # Publiceer Samenvatting (alleen als er iets in staat)
          if [ -s warnings_summary.md ]; then
            cat warnings_summary.md >> "$GITHUB_STEP_SUMMARY"
          fi

          if [ "$failed" -ne 0 ]; then
            echo "::error::Structured data validation errors detected."
            exit 1
          fi

          if [ "${FAIL_ON_WARNINGS}" = "true" ] && [ "$warn_failed" -ne 0 ]; then
            echo "::error::Google preset warnings detected (FAIL_ON_WARNINGS=true)."
            exit 1
          fi
          rm -f warnings_summary.md

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: validate
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Prepare static site (no build)
        run: |
          rsync -av \
            --exclude='.git*' --exclude='node_modules' --exclude='.github' \
            ./ ./dist/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
